// <auto-generated />
using System;
using ITC.IncomeTaxCalculatorService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITC.IncomeTaxCalculatorService.Infrastructure.Migrations
{
    [DbContext(typeof(TaxCalculatorContext))]
    [Migration("20230817133703_InitialModel")]
    partial class InitialModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITC.IncomeTaxCalculatorService.ApplicationCore.Entities.TaxBand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LowerLimit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int");

                    b.Property<int?>("UpperLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaxBands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LowerLimit = 0,
                            Name = "A",
                            TaxRate = 0,
                            UpperLimit = 5000
                        },
                        new
                        {
                            Id = 2,
                            LowerLimit = 5000,
                            Name = "B",
                            TaxRate = 20,
                            UpperLimit = 20000
                        },
                        new
                        {
                            Id = 3,
                            LowerLimit = 20000,
                            Name = "C",
                            TaxRate = 40
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
